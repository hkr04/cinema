<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.influence.cm.mapper.SysCommentMapper">

    <!-- Result map for SysComment -->
    <resultMap id="SysCommentResult" type="com.influence.cm.domain.SysComment">
        <id property="commentId" column="comment_id"/>
        <result property="commentContent" column="content"/>
        <result property="contentId" column="content_id"/>
        <result property="userId" column="user_id"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- Find all comments based on filter criteria -->
    <select id="findAllComments" parameterType="com.influence.cm.domain.vo.SysCommentVo" resultMap="SysCommentResult">
        SELECT * FROM sys_comment
        <where>
            <if test="contentId != null">AND content_id = #{contentId}</if>
            <if test="userId != null">AND user_id = #{userId}</if>
            <if test="status != null">AND status = #{status}</if>
            <!-- Add other conditions based on SysCommentVo attributes -->
        </where>
    </select>

    <!-- Find a comment by ID -->
    <select id="findCommentById" parameterType="Long" resultMap="SysCommentResult">
        SELECT * FROM sys_comment WHERE content_id = #{id}
    </select>

    <!-- Find one comment by ID (perhaps a simplified version without joins or related entities) -->
    <select id="findOneComment" parameterType="Long" resultType="com.influence.cm.domain.SysComment">
        SELECT comment_id, content AS commentContent, created_at AS createdAt, updated_at AS updatedAt FROM sys_comment WHERE comment_id = #{id}
    </select>

    <!-- Insert a new comment -->
    <insert id="addComment" parameterType="com.influence.cm.domain.SysComment">
        INSERT INTO sys_comment (content, author, content_id, user_id, status, created_at, updated_at)
        VALUES (#{commentContent}, #{contentId}, #{author}, #{userId}, #{status}, #{createdAt}, #{updatedAt})
    </insert>

    <!-- Update an existing comment -->
    <update id="updateComment" parameterType="com.influence.cm.domain.SysComment">
        UPDATE sys_comment
        SET content = #{commentContent}, 
            content_id = #{contentId}, 
            user_id = #{userId}, 
            status = #{status}, 
            updated_at = #{updatedAt}
        WHERE comment_id = #{commentId}
    </update>

    <!-- Delete a comment by ID -->
    <delete id="deleteComment" parameterType="Long">
        DELETE FROM sys_comment WHERE comment_id = #{id}
    </delete>

    <!-- Find comments by content ID -->
    <select id="findByContentId" parameterType="Long" resultMap="SysCommentResult">
        SELECT * FROM sys_comment WHERE content_id = #{contentId}
    </select>

    <!-- Find comments within a date range -->
    <select id="findByDateRange" parameterType="map" resultMap="SysCommentResult">
        SELECT * FROM sys_comment
        WHERE created_at BETWEEN #{startDate} AND #{endDate}
    </select>

    <!-- Get the total count of comments -->
    <select id="getTotalCommentCount" resultType="int">
        SELECT COUNT(*) FROM sys_comment
    </select>

</mapper>
